project_name: malaria  # also the folder name of the dataset that under data_path folder
train_set: train
val_set: val
num_gpus: 1

# mean and std in RGB order, actually this part should remain unchanged as long as your dataset is similar to coco.
# FOR NOW, DO NOT CHANGE THE MEAN AND STD
mean: [ 0.485, 0.456, 0.406 ]
std: [ 0.229, 0.224, 0.225 ]

# this anchor is adapted to the dataset
anchors_scales: '[2 ** 0, 2 ** (1.0 / 3.0), 2 ** (2.0 / 3.0)]'
anchors_ratios: '[(0.9, 1.1), (1.0, 1.0), (1.1, 0.9)]'

# must match your dataset's category_id.
# category_id is one_indexed,
# for example, index of 'fasciola' here is 0, while category_id of is 1
obj_list: ['leukocyte', 'trophozoite',
           'schizont', 'ring', 'gametocyte']

# Augmentation list. Here, we use the Albumentations library
# IMPORTANT: You MUST add A.Normalize(...) in the list.
# Also, you don't need to add Resizer in the end
# because it has been implemented inside
# CocoAlbumentationsDataset class.

# Dataset training plasmodium_vivax: {'height': [1200], 'width': [1600]}
# Efficient-Det sizes [512, 640, 768, 896, 1024, 1280, 1280, 1536, 1536]

# deteksi_malaria_2021_03_25
# augmentation: ['A.OneOf([A.RandomCrop(1024, 1024, p=1.), A.RandomCrop(768, 768, p=1.), A.RandomCrop(640, 640, p=0.33)], p=0.2)', 
#                'A.OneOf([A.Blur(blur_limit=5, p=1), A.MotionBlur(blur_limit=5, p=1)], p=0.2)',
#                'A.Transpose(p=0.5)',
#                'A.HorizontalFlip(p=0.5)',
#                'A.VerticalFlip(p=0.5)',
#                'A.ShiftScaleRotate(shift_limit=0.1, scale_limit=0.1, rotate_limit=10, p=1., border_mode=cv2.BORDER_CONSTANT)',
#                'A.Normalize(mean=params.mean, std=params.std, always_apply=True, max_pixel_value=1.)']

# augmentation: ['A.OneOf([A.RandomCrop(1200, 1200, p=1.), A.RandomCrop(1000, 1000, p=1.), A.RandomCrop(800, 800, p=1.0)], p=0.2)',
#                'A.Transpose(p=0.5)',
#                'A.HorizontalFlip(p=0.5)',
#                'A.VerticalFlip(p=0.5)',
#                'A.Normalize(mean=params.mean, std=params.std, always_apply=True, max_pixel_value=1.)',]

augmentation: ['A.Transpose(p=0.5)',
               'A.HorizontalFlip(p=0.5)',
               'A.VerticalFlip(p=0.5)',
               'A.Normalize(mean=params.mean, std=params.std, always_apply=True, max_pixel_value=1.)',]