project_name: ki67  # also the folder name of the dataset that under data_path folder
train_set: train
val_set: val
test_set: test
num_gpus: 1

# mean and std in RGB order, actually this part should remain unchanged as long as your dataset is similar to coco.
# FOR NOW, DO NOT CHANGE THE MEAN AND STD
mean: [ 0.485, 0.456, 0.406 ]
std: [ 0.229, 0.224, 0.225 ]

# this anchor is adapted to the dataset
anchors_scales: '[2 ** 0, 2 ** (1.0 / 3.0), 2 ** (2.0 / 3.0)]'
anchors_ratios: '[(0.9, 1.1), (1.0, 1.0), (1.1, 0.9)]'

# must match your dataset's category_id.
# category_id is one_indexed,
# for example, index of 'fasciola' here is 0, while category_id of is 1
obj_list: [ 'imunopositif', 'imunonegatif' ]

# Augmentation list. Here, we use the Albumentations library
# IMPORTANT: You MUST add the A.Normalize(...) in the list.
# Also, you don't need to add a Resizer in the end
# because it has been implemented inside the
# CocoAlbumentationsDataset class.
# Efficient-Det input image sizes : [512, 640, 768, 896, 1024, 1280, 1280, 1536, 1536]
augmentation: ['A.Transpose(p=0.5)',
               'A.HorizontalFlip(p=0.5)',
               'A.VerticalFlip(p=0.5)',
               'A.Normalize(mean=params.mean, std=params.std, always_apply=True, max_pixel_value=1.)',]